df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
View(df_train)
name_sep<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
View(name_sep)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
df_train_sub<-makedummies(df_train, basal_level=TRUE, col=c("Sex","Embarked"))
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
name_sep<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
name_sep<-as.data.frame(name_sep)
colnames(name_sep)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep$Honorific
View(df_train_sub)
View(df_train_mod)
name_sep<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep<-as.data.frame(name_sep)
colnames(name_sep)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep$Honorific
View(df_train)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
View(df_train)
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
name_sep<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
View(name_sep)
name_sep<-as.data.frame(name_sep)
colnames(name_sep)<-c("Surname","Honorific","Givenname")
View(name_sep)
df_train$Name<-name_sep$Honorific
View(df_train)
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
View(df_train_sub)
df_train_sub$Age<-as.numeric(df_train_sub$Age)
str(df_train_sub)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
View(df_train_sub)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::ifelse(is.na(Age), mean(Age,na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
#dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
mean(df_train_sub$age, na.rm=TRUE)
str(df_train_sub)
df_train_sub$Age<-as.integer(df_train_sub$Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
dplyr::if_else(is.na(Age), mean(Age,na.rm=TRUE), Age)
head(df_train_sub)
str(df_train)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
ifelse(is.na(Age), mean(Age, na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)%>%
ifelse(is.na(Age), mean(Age, na.rm=TRUE), Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)
table <-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age, na.rm=TRUE), df_train_mod$Age)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,rm=TRUE), df_train_mod$Age)
View(df_train_mod)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
View(df_train_mod)
sapply(df_train_mod, function(y) sum(is.na(y)))
na_count_train
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
#separate Name
name_sep<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
name_sep<-as.data.frame(name_sep)
colnames(name_sep)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep$Honorific
#
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
View(df_test)
name_sep_test<-str_split_fixed(df_test_sub$Name, "[,.]", 3)
name_sep_test<-as.data.frame(name_sep_test)
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep_train$Honorific
View(df_train)
View(df_train_sub)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
View(df_train)
View(df_train_sub)
View(name_sep_train)
name_sep_train<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
xname_sep_train<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
#separate Name
#(train)
name_sep_train<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
library(dplyr)
library(ggplot2)
library(makedummies)
library(stringr)
library(tidyr)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
View(df_train_sub)
name_sep_train<-str_split_fixed(df_train_sub$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
View(name_sep_train)
View(df_train_sub)
library(dplyr)
library(ggplot2)
library(makedummies)
library(stringr)
library(tidyr)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
View(name_sep_train)
df_train$Name<-name_sep_train$Honorific
#(test)
name_sep_test<-str_split_fixed(df_test$Name, "[,.]", 3)
name_sep_test<-as.data.frame(name_sep_test)
colnames(name_sep_test)<-c("Surname","Honorific","Givenname")
df_test$Name<-name_sep_test$Honorific
View(name_sep_train)
View(name_sep_test)
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
View(df_train_sub)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)
View(df_train_sub)
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
df_train_sub<-makedummies(df_train_temp,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train_temp$Name<-name_sep_train$Honorific
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep_train$Honorific
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
df_train_mod<-df_train_sub%>%
dplyr::select(-Cabin)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
View(df_train_mod)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
View(df_train_mod)
source('~/.active-rstudio-document', echo=TRUE)
df_train_mod<-dplyr::select(df_train_sub,-Cabin)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
View(df_train_sub)
View(df_train_mod)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
df_test_mod<-dplyr::select(df_test_sub,-Cabin)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
View(df_test_mod)
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
result<-predict(model, data = df_test_mod)
View(df_test_mod)
View(df_test_sub)
View(df_train_mod)
View(df_test_mod)
View(df_train_sub)
View(df_train_mod)
View(df_train_mod)
View(df_train_mod)
load("~/Documents/r-training/auction_sampling.RData")
View(train.data)
View(train.data)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
#separate Name
#(train)
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep_train$Honorific
#(test)
name_sep_test<-str_split_fixed(df_test$Name, "[,.]", 3)
name_sep_test<-as.data.frame(name_sep_test)
colnames(name_sep_test)<-c("Surname","Honorific","Givenname")
df_test$Name<-name_sep_test$Honorific
df_train_mod<-dplyr::select(df_train,-Cabin)
df_test_mod<-dplyr::select(df_test,-Cabin)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
View(df_train_mod)
df_train_mod<-dplyr::select(df_train,-Cabin&-PassengerID)
df_test_mod<-dplyr::select(df_test,-Cabin&-PassengerID)
View(df_train)
df_train_mod<-dplyr::select(df_train,-Cabin,-PassengerID)
df_train_mod<-df_train%>%dplyr::select(-Cabin,-PassengerID)
df_train_mod<-df_train%>%
dplyr::select(-Cabin, -PassengerID)
df_train_mod<-df_train%>%
dplyr::select(-Cabin)%>%
dplyr::select(-PassengerID)
df_train_mod<-df_train%>%
dplyr::select(-PassengerID)
df_train_mod<-df_train%>%
dplyr::select(-Ticket)
df_train_mod<-df_train%>%
dplyr::select(-Ticket, -Cabin)
df_train_mod<-df_train%>%
dplyr::select(-PassengerID,-Ticket, -Cabin)
str(df_train)
df_train_mod<-df_train%>%
dplyr::select(-PassengerId,-Ticket, -Cabin)
df_test_mod<-df_test%>%
df_test_mod<-df_test%>%
View(df_test_mod)
View(df_test_mod)
df_train_mod<-df_train%>%
dplyr::select(-PassengerId,-Ticket, -Cabin)
df_test_mod<-df_test%>%
dplyr::select(-PassengerId,-Ticket, -Cabin)
View(df_test_mod)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
result<-predict(model, data = df_test_mod)
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
View(df_test_mod)
table(df_train_mod$Embarked)
sum(table(df_train_mod$Embarked))
nrow(df_test_mod)
count(is.na(df_train_mod))
count(is.na(df_train_mod$Embarked))
View(df_train_mod)
na_count_train<-sapply(df_train_mod, function(y) sum(is.na(y)))
na_count_train
table(df_train_mod$Embarked)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Embarked), mean(df_train_mod$Embarked,na.rm=TRUE), df_train_mod$Embarked)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Embarked), mean(df_test_mod$Embarked,na.rm=TRUE), df_test_mod$Embarked)
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
#insert Embarked`s NA
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), mean(df_train_mod$Embarked,na.rm=TRUE), df_train_mod$Embarked)
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
result<-predict(model, data = df_test_mod)
View(df_train_mod)
View(df_test_mod)
View(df_train_mod)
result<-predict(model, data = df_test_mod)
sapply(df_train_mod, function(y) sum(is.na(y)))
sapply(df_test_mod, function(y) sum(is.na(y)))
df_test_Fare$Age<-ifelse(is.na(df_test_Fare$Age), mean(df_test_Fare$Age,na.rm=TRUE), df_test_Fare$Age)
df_test_mod$Age<-ifelse(is.na(df_test_Fare$Age), mean(df_test_Fare$Age,na.rm=TRUE), df_test_Fare$Age)
df_test_mod$Fare<-ifelse(is.na(df_test_mod$Fare), mean(df_test_mod$Fare,na.rm=TRUE), df_test_mod$Fare)
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
result<-predict(model, data = df_test_mod)
relative_err <- mean(abs(result$predictions - answer) / answer)  print(relative_err)
relative_err <- mean(abs(result$predictions - answer) / answer)
print(relative_err)
result
summary(result)
lim <- c(0, max(result$predictions, answer))
data.frame(Predict = result$predictions, Answer = answer) %>%
ggplot(aes(x = Predict, y = Answer)) +
geom_point() +
geom_abline(
intercept = 0, slope = 1,
colour = "red", lwd = 1.5
) +
xlab("予測価格") + ylab("実価格") +
scale_x_continuous(label = comma, limits = lim) +
scale_y_continuous(label = comma, limits = lim) +
theme_bw(base_family = "Osaka") +
coord_fixed()
load("~/Documents/r-training/titanic2.RData")
View(titanic2)
library(kernlab)
library(caret)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, newdata = df_test_mod, type = "class")
pred <- predict(fit, newdata = df_test_mod, type = "class")
pred <- predict(fit, newdata = df_test_mod, type = "class")
pred <- predict(fit, newdata = df_test_mod)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
#separate Name
#(train)
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep_train$Honorific
#(test)
name_sep_test<-str_split_fixed(df_test$Name, "[,.]", 3)
name_sep_test<-as.data.frame(name_sep_test)
colnames(name_sep_test)<-c("Surname","Honorific","Givenname")
df_test$Name<-name_sep_test$Honorific
#make dummy variables
df_train_sub<-makedummies(df_train,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_train_sub$Age<-as.integer(df_train_sub$Age)
df_test_sub<-makedummies(df_test,basal_level=TRUE, as.is=c("Name", "Ticket", "Cabin"))
df_test_sub$Age<-as.integer(df_test_sub$Age)
#remove Cabin
df_train_mod<-df_train%>%
dplyr::select(-PassengerId,-Ticket, -Cabin)
df_test_mod<-df_test%>%
dplyr::select(-PassengerId,-Ticket, -Cabin)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
#insert Embarked`s NA
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
#test of  Fare`s NA
df_test_mod$Fare<-ifelse(is.na(df_test_mod$Fare), mean(df_test_mod$Fare,na.rm=TRUE), df_test_mod$Fare)
View(df_test_mod)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
fit
tbl <- table(df_test_mod$Survived, pred)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
tbl <- table(df_test_mod$Survived, pred)
View(df_train_mod)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, df_test_mod)
str(df_train_mod)
str(df_test_mod)
df_test_mod$Embarked<-as.character(df_test_mod$Embarked)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, df_test_mod)
str(df_train_mod)
str(df_test_mod)
result<-predict(model, data = df_test_mod)
#Relative error
relative_err <- mean(abs(result$predictions - answer) / answer)
df_train_mod<-df_train%>%
dplyr::select(-PassengerId,-Ticket, -Cabin, -Name)
df_test_mod<-df_test%>%
dplyr::select(-PassengerId,-Ticket, -Cabin, -Name)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
#insert Embarked`s NA
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
df_test_mod$Embarked<-as.character(df_test_mod$Embarked)
#test of  Fare`s NA
df_test_mod$Fare<-ifelse(is.na(df_test_mod$Fare), mean(df_test_mod$Fare,na.rm=TRUE), df_test_mod$Fare)
#make model
model<-ranger(
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, df_test_mod)
str(df_test_mod)
str(df_train_mod)
na_count_train<-sapply(df_train_mod, function(y) sum(is.na(y)))
sapply(df_train_mod, function(y) sum(is.na(y)))
sapply(df_test_mod, function(y) sum(is.na(y)))
View(df_test_mod)
View(df_train_mod)
str(df_test_mod)
str(df_train_mod)
df_train_mod$Embarked<-as.integer(df_traint_mod$Embarked)
df_test_mod$Embarked<-as.integer(df_test_mod$Embarked)
df_train_mod$Embarked<-as.integer(df_train_mod$Embarked)
df_test_mod$Embarked<-as.integer(df_test_mod$Embarked)
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
df_train_mod$Embarked<-as.integer(df_train_mod$Embarked)
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
df_train_mod$Embarked<-as.character(df_train_mod$Embarked)
df_train<-read.csv("train.csv", na.strings = (c("NA", "")))
df_test<-read.csv("test.csv", na.strings = (c("NA", "")))
na_count_train<-sapply(df_train, function(y) sum(is.na(y)))
#separate Name
#(train)
name_sep_train<-str_split_fixed(df_train$Name, "[,.]", 3)
name_sep_train<-as.data.frame(name_sep_train)
colnames(name_sep_train)<-c("Surname","Honorific","Givenname")
df_train$Name<-name_sep_train$Honorific
#(test)
name_sep_test<-str_split_fixed(df_test$Name, "[,.]", 3)
name_sep_test<-as.data.frame(name_sep_test)
colnames(name_sep_test)<-c("Surname","Honorific","Givenname")
df_test$Name<-name_sep_test$Honorific
df_train_mod<-df_train%>%
dplyr::select(-PassengerId,-Ticket, -Cabin, -Name)
df_test_mod<-df_test%>%
dplyr::select(-PassengerId,-Ticket, -Cabin, -Name)
#remove Age`s NA
df_train_mod$Age<-ifelse(is.na(df_train_mod$Age), mean(df_train_mod$Age,na.rm=TRUE), df_train_mod$Age)
df_test_mod$Age<-ifelse(is.na(df_test_mod$Age), mean(df_test_mod$Age,na.rm=TRUE), df_test_mod$Age)
#insert Embarked`s NA
df_train_mod$Embarked<-ifelse(is.na(df_train_mod$Embarked), "S", df_train_mod$Embarked)
df_test_mod$Embarked<-ifelse(is.na(df_test_mod$Embarked), "S", df_test_mod$Embarked)
df_train_mod$Embarked<-as.character(df_train_mod$Embarked)
df_test_mod$Embarked<-as.character(df_test_mod$Embarked)
#test of  Fare`s NA
df_test_mod$Fare<-ifelse(is.na(df_test_mod$Fare), mean(df_test_mod$Fare,na.rm=TRUE), df_test_mod$Fare)
#make model
model<-ranger(
Survived~.,
data = df_train_mod,
write.forest = TRUE
)
#predict
result<-predict(model, data = df_test_mod)
#Relative error
relative_err <- mean(abs(result$predictions - answer) / answer)
print(relative_err)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
pred <- predict(fit, df_test_mod)
fit<-ksvm(
Survived~.,
data = df_train_mod
)
fit
print(fit)
summary(fit)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, [ ,df_test_mod])
pred <- predict(fit, [ ,df_test_mod])
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
pred <- predict(fit, df_test_mod)
